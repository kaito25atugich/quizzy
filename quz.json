{
  "jsonquiz" :{
    "0": {
      "question": "情報セキュリティはつまるところ計算機の問題である",
      "answer": "x"
    },
    "1": {
      "question": "情報セキュリティはつまるところ人間の問題である.",
      "answer": "o"
    },
    "2": {
      "question": "情報セキュリティは「破られる」か「破られない」かを検討する.つまり対象を定性的に 取り扱う.",
      "answer": "x"
    },
    "3": {
      "question": "情報セキュリティは破られるのにどれだけのコストを必要とするかを検討できる.つまり 対象を定量的に取り扱える.",
      "answer": "o"
    },
    "4": {
      "question": "システムのセキュリティを確保するためソーシャル・エンジニアリングの技法を積極的に取り入れるべきである.",
      "answer": "x"
    },
    "5": {
      "question": "ソーシャル・エンジニアリング対策として善意を装った情報収集や情報調査には応じない.",
      "answer": "o"
    },
    "6": {
      "question": "ブルート・フォース・アタックは辞書攻撃よりも強力でありブルート・フォース・アタックに対して強いパスワード空間を用いればそのパスワードは安全である.",
      "answer": "x"
    },
    "7": {
      "question": "ブルート・フォース・アタックに対して強いパスワード空間を採用すべきである.",
      "answer": "o"
    },
    "8": {
      "question": "乱数をうまく用いてブルート・フォース・アタックを行うとパスワード解析に要する時間を減らすことができる.",
      "answer": "x"
    },
    "9": {
      "question": "ブルート・フォース・アタックで要する時間は1 回の試行時間(パスワード解析の場合一つを入力してその正誤を知るまでの時間)と試行回数の積で求められる.",
      "answer": "o"
    },
    "10": {
      "question": "8 文字を超えるパスワードは覚えにくくなるので使わない方がよい.",
      "answer": "x"
    },
    "11": {
      "question": "パスワード空間の大きさは使用できる文字の数と許容されるパスワード(文字列)の長さ によって求められる.",
      "answer": "o"
    },
    "12": {
      "question": "認証システム開発者はパスワードの設定を利用者に委ねず最初に発行したパスワードを使わせる方が結局は安心してシステムを利用してもらえる.",
      "answer": "x"
    },
    "13": {
      "question": "「個人識別情報と初期パスワードを配布し利用者にはできるだけすみやかにパスワードを変更してもらう」というパスワード発行・管理方法がよく用いられている.",
      "answer": "o"
    },
    "14": {
      "question": "盗聴者は通信されるメッセージにノイズを混入して通信の撹乱を狙う.",
      "answer": "x"
    },
    "15": {
      "question": "盗聴者は通信されるメッセージを送受信者に知られないように受け取ろうとする.",
      "answer": "o"
    },
    "16": {
      "question": "平文は人間のためのメッセージであり暗号文はコンピュータのためのメッセージである.",
      "answer": "x"
    },
    "17": {
      "question": "平文を暗号化したメッセージを暗号文という.",
      "answer": "o"
    },
    "18": {
      "question": "暗号文から冗長性を取り除いて複合すれば元の平文が得られる.",
      "answer": "x"
    },
    "19": {
      "question": "暗号文を適切な方法で復号すれば元の平文が得られる.",
      "answer": "o"
    },
    "20": {
      "question": "暗号文が通信路で書き換えられても正しく復号できる.",
      "answer": "x"
    },
    "21": {
      "question": "メッセージを暗号化してから送れば盗聴者に渡るのは暗号文だけである.",
      "answer": "o"
    },
    "22": {
      "question": "暗号解読を用いるとメッセージの機密性を守ることができる.",
      "answer": "x"
    },
    "23": {
      "question": "暗号技術を用いるとメッセージの機密性を守ることができる.",
      "answer": "o"
    },
    "24": {
      "question": "実用的な暗号では原理的に復号の方法(もしくは復号鍵)を知らなければ暗号文から平文を 復元できない.",
      "answer": "x"
    },
    "25": {
      "question": "受信者以外が暗号文から平文を復元しようとすることを暗号解読という.",
      "answer": "o"
    },
    "26": {
      "question": "暗号解読は不正アクセス防止法により禁じられている.",
      "answer": "x"
    },
    "27": {
      "question": "暗号の研究者が悪意を持たずに暗号解読をすることもある.",
      "answer": "o"
    },
    "28": {
      "question": "鍵を使用せず暗号アルゴリズムを秘密にするのが現在の暗号アルゴリズムの主流である.",
      "answer": "x"
    },
    "29": {
      "question": "暗号化の入力として平文のほかに鍵を使用するのが現在の暗号アルゴリズムの主流である.",
      "answer": "o"
    },
    "30": {
      "question": "公開鍵暗号では暗号化と復号のアルゴリズムは同一で使用する鍵が異なる.",
      "answer": "x"
    },
    "31": {
      "question": "公開鍵暗号では暗号化と復号で異なる鍵を用い一般に暗号化の鍵は公開してもよい.",
      "answer": "o"
    },
    "32": {
      "question": "対称暗号より後で公開鍵暗号が登場したので公開鍵暗号は慣用暗号とも呼ばれる.",
      "answer": "x"
    },
    "33": {
      "question": "対称暗号より後で公開鍵暗号が登場したので対称暗号は慣用暗号とも呼ばれる.",
      "answer": "o"
    },
    "34": {
      "question": "メッセージと一方向ハッシュ関数により求められたハッシュ値を生成し保存しておけば将来そのいずれかまたは両方が改竄されても検知できる.",
      "answer": "x"
    },
    "35": {
      "question": "メッセージと一方向ハッシュ関数により求められたハッシュ値を生成し保存しておけば 将来そのいずれかが改竄されても検知できる.",
      "answer": "o"
    },
    "36": {
      "question": "認証とは期待した通信相手がメッセージを送ったことを確かめることである.",
      "answer": "x"
    },
    "37": {
      "question": "認証とは受け取った情報が期待した通信相手からのものであることを確かめることであ る.",
      "answer": "o"
    },
    "38": {
      "question": "デジタル署名は盗聴ソーシャル・エンジニアリングDDoS を防ぐ技術である.",
      "answer": "x"
    },
    "39": {
      "question": "デジタル署名はなりすまし改竄否認を防ぐ技術である.",
      "answer": "o"
    },
    "40": {
      "question": "パソコンでも真の乱数を生成できるが前処理が必要となりコストが高くつくので疑似乱数 生成器を採用している.",
      "answer": "x"
    },
    "41": {
      "question": "計算機で鍵を生成するには一般に疑似乱数生成器を用いる.",
      "answer": "o"
    },
    "42": {
      "question": "改竄は機密性を脅かす特性でありその対処として対称暗号が用いられる.",
      "answer": "x"
    },
    "43": {
      "question": "改竄は正真性(あるいは完全性)を脅かす特性でありその対処として一方向ハッシュ関数が用いられる.",
      "answer": "o"
    },
    "44": {
      "question": "独自の暗号アルゴリズムを開発しそれを秘密にしておけば安全である.",
      "answer": "x"
    },
    "45": {
      "question": "暗号アルゴリズムを秘密にして機密性を保とうとする暗号システムはそのアルゴリズムが暴 かれる可能性がある.",
      "answer": "o"
    },
    "46": {
      "question": "鍵空間の大きいものが強い暗号アルゴリズムである.",
      "answer": "x"
    },
    "47": {
      "question": "暗号アルゴリズムが強いことを証明するのは弱いことを示すよりも困難である.",
      "answer": "o"
    },
    "48": {
      "question": "一つ の暗号文のみから平文もしくは鍵を求められなければその暗号アルゴリズムは強いといってよい.",
      "answer": "x"
    },
    "49": {
      "question": "平文と暗号文の組をたくさん渡してもその鍵を求めるのに非常に大きな時間がかかることはその暗号アルゴリズムが強いというための必要条件である.",
      "answer": "o"
    },
    "50": {
      "question": "情報理論的に解読不可能な暗号として使い捨てパッドと量子暗号が広く普及している.",
      "answer": "x"
    },
    "51": {
      "question": "現在実用的な暗号アルゴリズムは原理的には解読できるがそのコスト(時間など)が非現実的なことを根拠として安全であると言われている.",
      "answer": "o"
    },
    "52": {
      "question": "システム全体のセキュリティの強さはその中で最も強いセキュリティによって決まる.",
      "answer": "x"
    },
    "53": {
      "question": "システム全体のセキュリティの弱さはその中で最も弱いセキュリティによって決まる.",
      "answer": "o"
    },
    "54": {
      "question": "シーザー暗号や単一換字暗号は実用的かつ十分安全な暗号アルゴリズムである.",
      "answer": "x"
    },
    "55": {
      "question": "シーザー暗号はブルート・フォース・アタックに単一換字暗号は頻度分析にそれぞれ弱い.",
      "answer": "o"
    },
    "56": {
      "question": "単一換字暗号の暗号アルゴリズムは実装されていない.",
      "answer": "x"
    },
    "57": {
      "question": "アルファベット(英字 26 文字)を対象とする単一換字暗号の暗号アルゴリズムはsed などのコマンドで容易に実現できる.",
      "answer": "o"
    },
    "58": {
      "question": "単一換字暗号に対しては1 文字の暗号文の解読も1000 文字の暗号文の解読も同じ労力でできる.",
      "answer": "x"
    },
    "59": {
      "question": "単一換字暗号に対しては暗号文が長ければ解読しやすくなる.",
      "answer": "o"
    },
    "60": {
      "question": "暗号アルゴリズムと鍵を分けるという暗号化の方式は容易に解読できてしまうため現代の実用的な暗号では使用されない.",
      "answer": "x"
    },
    "61": {
      "question": "暗号アルゴリズムと鍵を分けるという暗号化の方式はシーザー暗号や単一換字暗号だけでなくAES や RSA といった現在標準的に用いられている暗号でも採用されている.",
      "answer": "o"
    },
    "62": {
      "question": "鍵を固定し通信ごとに暗号アルゴリズムを変えることで安全性が増す.",
      "answer": "x"
    },
    "63": {
      "question": "暗号アルゴリズムを固定し通信ごとに鍵を変えることで安全性が増す.",
      "answer": "o"
    },
    "64": {
      "question": "暗号アルゴリズムの標準化は解読方法の標準化をも許してしまい望ましくない.",
      "answer": "x"
    },
    "65": {
      "question": "暗号アルゴリズムの標準化はそれをみんなの共有財産として利用できることにつながり望ましいものである.",
      "answer": "o"
    },
    "66": {
      "question": "現在の実用的な暗号の安全性は暗号解読問題が決定不能であることを根拠としている.",
      "answer": "x"
    },
    "67": {
      "question": "現在よく用いられている暗号については一般に有限時間内に暗号解読ができる.",
      "answer": "o"
    },
    "68": {
      "question": "2 つの数 p と q からその積を求めるアルゴリズムの逆演算を用いて2つの数の積 N からその 素因数を効率よく求めることができる.",
      "answer": "x"
    },
    "69": {
      "question": "素因数問題や離散対数問題は現在のところ効率的に解くことができない.",
      "answer": "o"
    },
    "70": {
      "question": "素数判定素因数分解離散対数の問題はいずれも効率的に解ける問題である.",
      "answer": "x"
    },
    "71": {
      "question": "加減乗除剰余ビットごとの排他的論理和最大公約数最小公倍数はいずれも効率的に求められる.",
      "answer": "o"
    },
    "72": {
      "question": "使い捨てパッドによる暗号に対して任意の大きさの鍵空間全体を一瞬で計算できる(非現実的な)コンピュータを用いれば解読が可能である.",
      "answer": "x"
    },
    "73": {
      "question": "使い捨てパッドは理論的に解読 不可能な暗号である.",
      "answer": "o"
    },
    "74": {
      "question": "使い捨てパッドの復号には暗号文と鍵の他に平文も必要である.",
      "answer": "x"
    },
    "75": {
      "question": "使い捨てパッドにおいて暗号化と復号の操作は同じである.",
      "answer": "o"
    },
    "76": {
      "question": "使い捨てパッドで使用する鍵は圧縮してサイズを 1/10 程度にできる.",
      "answer": "x"
    },
    "77": {
      "question": "使い捨てパッドでは平文と同じビット長の真の乱数を鍵とする.",
      "answer": "o"
    },
    "78": {
      "question": "使い捨てパッドは送信者と受信者で別々に同一の乱数を生成することが難しいため実用的ではない.",
      "answer": "x"
    },
    "79": {
      "question": "使い捨てパッドは鍵の生成や管理が難しいため実用的ではない.",
      "answer": "o"
    },
    "80": {
      "question": "DES による暗号文はあと 20〜30 年は大丈夫である.",
      "answer": "x"
    },
    "81": {
      "question": "コンピュータの進歩や解読法の発明によりDESによる暗号文は短時間で解読できる.",
      "answer": "o"
    },
    "82": {
      "question": "DES の暗号化の構造はSPN 構造と呼ばれる.",
      "answer": "x"
    },
    "83": {
      "question": "DES の暗号化の構造はフェイステルネットワークと呼ばれる.",
      "answer": "o"
    },
    "84": {
      "question": "DES はその構造上ある鍵で復号してからその鍵で暗号化すると元に戻らない.",
      "answer": "x"
    },
    "85": {
      "question": "DES はサブ鍵のラウンドごとの順序が反対になる以外は暗号化と復号がまったく同じ構造で実現されている.",
      "answer": "o"
    },
    "86": {
      "question": "フェイステルネットワークではサブ鍵の生成方法とラウンド関数の構成によって復号に失敗することがある.",
      "answer": "x"
    },
    "87": {
      "question": "フェイステルネットワークではサブ鍵の生成方法とラウンド関数の構成によって容易に解読できてしまうことがある.",
      "answer": "o"
    },
    "88": {
      "question": "トリプル DES は同一の鍵で 3 回の DES 暗号化を行うことで安全性を向上している.",
      "answer": "x"
    },
    "89": {
      "question": "トリプル DES はDES に対する上位互換性がある.",
      "answer": "o"
    },
    "90": {
      "question": "AES は米国の研究者が設計したブロック暗号アルゴリズムであり米国以外で使用できない.",
      "answer": "x"
    },
    "91": {
      "question": "AES は特許その他の制約を受けず自由に使用できる対称暗号である.",
      "answer": "o"
    },
    "92": {
      "question": "AES の安全性は隠すことによるセキュリティに基づいている.",
      "answer": "x"
    },
    "93": {
      "question": "AES の安全性はコンペ方式による標準化に基づいている.",
      "answer": "o"
    },
    "94": {
      "question": "今後対称暗号を使うならさまざまな設計と解読の歴史を調査した上で暗号アルゴリズムを独自に設計してこっそりと使用するのがよい.",
      "answer": "x"
    },
    "95": {
      "question": "今後対称暗号を使うならAES (Rijndael)を採用するのがよい.",
      "answer": "o"
    },
    "96": {
      "question": "対称暗号と鍵の事前共有を用いて N 人の組織の中で互いに秘密通信をしたいとき全体で必要 な鍵の数は N-1 である.",
      "answer": "x"
    },
    "97": {
      "question": "対称暗号と鍵の事前共有を用いて N 人の組織の中で互いに秘密通信をしたいとき全体で必要 な鍵の数は N の 2 乗に比例する.",
      "answer": "o"
    },
    "98": {
      "question": "公開鍵暗号を用いて N 人の組織の中で互いに秘密通信をしたいとき全体で必要な鍵ペアの数 は N の 2 乗に比例する.",
      "answer": "x"
    },
    "99": {
      "question": "公開鍵暗号を用いて N 人の組織の中で互いに秘密通信をしたいとき全体で必要な鍵ペアの数 は N である.",
      "answer": "o"
    },
    "100": {
      "question": "公開鍵暗号では暗号化の鍵が盗聴者に知られてはいけない.",
      "answer": "x"
    },
    "101": {
      "question": "公開鍵暗号では復号の鍵が盗聴者に知られてはいけない.",
      "answer": "o"
    },
    "102": {
      "question": "公開鍵暗号で秘密通信をするためには受信者は送信者の公開鍵を知っていなければならない.",
      "answer": "x"
    },
    "103": {
      "question": "公開鍵暗号で秘密通信をするためには送信者は受信者の公開鍵を知っていなければならない.",
      "answer": "o"
    },
    "104": {
      "question": "RSA の鍵ペアは384〜2304 ビットの任意長ビット列である.",
      "answer": "x"
    },
    "105": {
      "question": "RSA の鍵ペアは綿密な計算に基づいて作られたいくつかの整数により構成される.",
      "answer": "o"
    },
    "106": {
      "question": "素数を求めるにはRSA の暗号化と復号の操作が必要となる.",
      "answer": "x"
    },
    "107": {
      "question": "素数を求めるには整数をランダムに生成してそれが素数であるかを検査するのが一般的である.",
      "answer": "o"
    },
    "108": {
      "question": "RSA の鍵ペア生成においてE×D mod L = 1 を満たす D を効率よく求める方法は見つかってい ないので比較的小さな D をランダムに生成する方法がとられている.",
      "answer": "x"
    },
    "109": {
      "question": "RSA の鍵ペア生成においてE×D mod L = 1 を満たす D はユークリッドの互助法の拡張版を 用いて効率よく求められる.",
      "answer": "o"
    },
    "110": {
      "question": "RSA の安全性はブルート・フォース・アタックでプライベート鍵を求めることが困難である ことを根拠としている.",
      "answer": "x"
    },
    "111": {
      "question": "RSA の安全性は素因数分解問題と離散対数問題が困難であることを根拠としている.",
      "answer": "o"
    },
    "112": {
      "question": "RSA で生成する素数 p q を暗号解読者に知られても安全である.",
      "answer": "x"
    },
    "113": {
      "question": "RSA で生成する素数 p q を暗号解読者に知られるのはプライベート鍵が知られるのと等価で ある.",
      "answer": "o"
    },
    "114": {
      "question": "RSA に対してman-in-the-middle 攻撃により暗号文が解読されてしまう.",
      "answer": "x"
    },
    "115": {
      "question": "RSA に対してman-in-the-middle 攻撃により暗号文を解読することなしに秘密のメッセージ を知ることが可能となる.",
      "answer": "o"
    },
    "116": {
      "question": "公開鍵暗号は鍵管理問題を解決することができ今後対称暗号は使われなくなるであろう.",
      "answer": "x"
    },
    "117": {
      "question": "公開鍵暗号には鍵サイズや処理時間の問題があるのでこれからも対称暗号と公開鍵暗号の使い分けがなされるであろう.",
      "answer": "o"
    },
    "118": {
      "question": "鍵の金銭的価値は秘密にすべきコンテンツが大きくなればなるほど小さくなる.",
      "answer": "x"
    },
    "119": {
      "question": "暗号文と鍵から平文が得られるので鍵は平文と同じ価値を持つといってよい.",
      "answer": "o"
    },
    "120": {
      "question": "鍵を暗号化することも理論的に可能であるが手間がかかり実用的ではない.",
      "answer": "x"
    },
    "121": {
      "question": "鍵を暗号化して送るという暗号化方式も実用化されている.",
      "answer": "o"
    },
    "122": {
      "question": "乱数の生成は疑似乱数生成器を用いてもよいしサイコロを振ってもよいし人間の頭でひらめいたものを使ってもよい.",
      "answer": "x"
    },
    "123": {
      "question": "鍵を作る方法は乱数を使うものとパスワードを使うものに大別できる.",
      "answer": "o"
    },
    "124": {
      "question": "RSA の 2 つの素数の積 N を紛失すると大きな問題になる.",
      "answer": "x"
    },
    "125": {
      "question": "公開鍵暗号のプライベート鍵を紛失すると大きな問題になる.",
      "answer": "o"
    },
    "126": {
      "question": "Diffie-Hellman 鍵交換を用いるとRSA をはじめとする公開鍵暗号の鍵ペアを作り出すことができる.",
      "answer": "x"
    },
    "127": {
      "question": "Diffie-Hellman 鍵交換を用いると共通の秘密の数を作り出すことができる.",
      "answer": "o"
    },
    "128": {
      "question": "Diffie-Hellman 鍵交換において離散対数問題を解くことでG の AB 乗 mod P からG の A 乗 mod P と G の B 乗 mod P を知ることが可能である.",
      "answer": "x"
    },
    "129": {
      "question": "Diffie-Hellman 鍵交換においてman-in-the-middle 攻撃が成立する.",
      "answer": "o"
    },
    "130": {
      "question": "一方向ハッシュ関数は機密性を実現するための技術である.",
      "answer": "x"
    },
    "131": {
      "question": "一方向ハッシュ関数は正真性を実現するための技術である.",
      "answer": "o"
    },
    "132": {
      "question": "一方向ハッシュ関数はメッセージと鍵を入力にとりMAC 値を出力する.",
      "answer": "x"
    },
    "133": {
      "question": "一方向ハッシュ関数はメッセージを入力にとりハッシュ値を出力する.",
      "answer": "o"
    },
    "134": {
      "question": "160 ビット未満のメッセージに対してSHA-1 は使用できない.",
      "answer": "x"
    },
    "135": {
      "question": "SHA-1 のハッシュ値は入力となるメッセージのサイズに関わらず160 ビットである.",
      "answer": "o"
    },
    "136": {
      "question": "一方向ハッシュ関数 h に対してh(m)=h(n)となるような異なるメッセージ m n があること を衝突耐性という.",
      "answer": "x"
    },
    "137": {
      "question": "一方向ハッシュ関数 h に対してh(m)=h(n)となるような異なるメッセージ m n があること を衝突という.",
      "answer": "o"
    },
    "138": {
      "question": "一方向ハッシュ関数 h と与えられたハッシュ値 h(m)に対してh(m)=h(n)を満たすメッセー ジ n を求めるのが非常に困難なことを一方向ハッシュ関数の強衝突耐性という.",
      "answer": "x"
    },
    "139": {
      "question": "一方向ハッシュ関数 h と与えられたハッシュ値 h(m)に対してh(m)=h(n)を満たすメッセー ジ n を求めるのが非常に困難なことを一方向ハッシュ関数の弱衝突耐性という.",
      "answer": "o"
    },
    "140": {
      "question": "ブルート・フォース・アタックを用いてハッシュ値を解読し元のメッセージを求めることは 原理的に可能である.",
      "answer": "x"
    },
    "141": {
      "question": "一方向ハッシュ関数で生成したハッシュ値から元のメッセージを求めることはできない.",
      "answer": "o"
    },
    "142": {
      "question": "ダウンロードサイトからソフトウェアとそのハッシュ値を取得して通信路で改竄が行われて いないことを検証できる.",
      "answer": "x"
    },
    "143": {
      "question": "ミラーサイトから何らかのファイルをオリジナルサイトからそのハッシュ値を取得してミ ラーサイトから入手したファイルがオリジナルサイトのものと同一であることを検証でき る.",
      "answer": "o"
    },
    "144": {
      "question": "ハッシュ値の計算は複雑なので専門サイトにメッセージを送ってハッシュ値を計算してもら うのが一般的である.",
      "answer": "x"
    },
    "145": {
      "question": "MD5SHA-1 のハッシュ値を求めるコマンドとしてmd5sumsha1sum がよく用いられる.",
      "answer": "o"
    },
    "146": {
      "question": "一方向ハッシュ関数の弱衝突耐性を破ろうとする攻撃はハッシュ値のビット長(SHA-1 なら 160)だけ試行すれば必ず成功する.",
      "answer": "x"
    },
    "147": {
      "question": "一方向ハッシュ関数の弱衝突耐性を破ろうとする攻撃はとり得るハッシュ値の数(SHA-1 なら 2 の 160 乗)だけ試行すれば成功することが期待できる.",
      "answer": "o"
    },
    "148": {
      "question": "一方向ハッシュ関数の強衝突耐性を破ろうとする攻撃は弱衝突耐性を破ろうとする攻撃よりも計算の手間を要する.",
      "answer": "x"
    },
    "149": {
      "question": "誕生日攻撃は一方向ハッシュ関数の強衝突耐性を破ろうとする攻撃である.",
      "answer": "o"
    },
    "150": {
      "question": "一方向ハッシュ関数はなりすましを検出できるが改竄は検出できない.",
      "answer": "x"
    },
    "151": {
      "question": "一方向ハッシュ関数は改竄を検出できるがなりすましは検出できない.",
      "answer": "o"
    },
    "152": {
      "question": "メッセージ認証コードはデジタル署名と同じく改竄が行われていないことを通信相手および第三者に示すための技術である.",
      "answer": "x"
    },
    "153": {
      "question": "メッセージ認証コードは暗号アルゴリズムと同じくメッセージと鍵を入力にとる.",
      "answer": "o"
    },
    "154": {
      "question": "暗号プロトコルの安全性は用いる暗号アルゴリズムの安全性に依存する.言い換えると 用いる暗号アルゴリズムが安全であれば安全な暗号プロトコルを設計できる.",
      "answer": "x"
    },
    "155": {
      "question": "用いる暗号アルゴリズムが安全であると仮定しても暗号プロトコルは安全でないことがある.",
      "answer": "o"
    },
    "156": {
      "question": "暗号プロトコルはその性質上常に対称暗号を使用する.",
      "answer": "x"
    },
    "157": {
      "question": "暗号プロトコルには対称暗号を使用するものもあれば公開鍵暗号を使用するものもある.",
      "answer": "o"
    },
    "158": {
      "question": "敵が設定した目標を達成できるときその暗号プロトコルを安全でないと定義することで暗号プロトコルの(広い意味の)安全性を証明できる.",
      "answer": "x"
    },
    "159": {
      "question": "敵が設定した目標を達成できないときその暗号プロトコルを安全であると定義することは できるがそれは非常に限定的な意味の安全性である.",
      "answer": "o"
    },
    "160": {
      "question": "通信路でメッセージが書き換えられてしまうのならそのメッセージを暗号化すればよい.",
      "answer": "x"
    },
    "161": {
      "question": "暗号プロトコルを改良する際やみくもに暗号化をしても安全性が向上しないことがある.",
      "answer": "o"
    },
    "162": {
      "question": "リプレイ攻撃を防ぐには暗号化して送ればよい.",
      "answer": "x"
    },
    "163": {
      "question": "リプレイ攻撃を防ぐためにシーケンス番号タイムスタンプノンスを用いる方法がある.",
      "answer": "o"
    },
    "164": {
      "question": "正当なユーザや TTP との結託ができればどんな暗号プロトコルも破られるので暗号プロトコ ルの安全性を議論するのは無意味である.",
      "answer": "x"
    },
    "165": {
      "question": "暗号プロトコルの安全性を検討する際敵は最低限盗聴なりすましman-in-the-middle 攻撃リプレイ攻撃通信情報の遮断ができるものとする.",
      "answer": "o"
    },
    "166": {
      "question": "メッセージ認証コードは公開鍵暗号を用いたデジタル署名とみなすことができる.",
      "answer": "x"
    },
    "167": {
      "question": "メッセージ認証コードは鍵に依存した一方向ハッシュ関数とみなすことができる.",
      "answer": "o"
    },
    "168": {
      "question": "メッセージとその MAC 値のペアからその送信者が適切な鍵を持っていることがわかる.",
      "answer": "x"
    },
    "169": {
      "question": "メッセージとその MAC 値のペアを用いてメッセージの認証を行うことができる.",
      "answer": "o"
    },
    "170": {
      "question": "メッセージ認証コードはIPsec や SSL などを用いて実現できる.",
      "answer": "x"
    },
    "171": {
      "question": "メッセージ認証コードは一方向ハッシュ関数や対称暗号などを用いて実現できる.",
      "answer": "o"
    },
    "172": {
      "question": "メッセージ認証コードは第三者による証明が可能であるほか否認を防止することもできる.",
      "answer": "x"
    },
    "173": {
      "question": "メッセージ認証コードは鍵を共有する当事者間で証明を行うものであり否認を防止することはできない.",
      "answer": "o"
    },
    "174": {
      "question": "デジタル署名とはメッセージ認証コードの暗号化関数に公開鍵暗号を用いたものであり鍵 は当事者間で秘密に共有しなければならない.",
      "answer": "x"
    },
    "175": {
      "question": "デジタル署名では署名と検証に用いる鍵が異なる.",
      "answer": "o"
    },
    "176": {
      "question": "RSA を用いたデジタル署名では公開鍵が署名用の鍵でプライベート鍵が復元(復号検証) 用の鍵である.",
      "answer": "x"
    },
    "177": {
      "question": "RSA を用いたデジタル署名ではプライベート鍵が署名用の鍵で公開鍵が復元(復号検証) 用の鍵である.",
      "answer": "o"
    },
    "178": {
      "question": "デジタル署名では暗号鍵は公開されているのでそれを用いてだれでも署名文を生成でき る.",
      "answer": "x"
    },
    "179": {
      "question": "デジタル署名では検証用の鍵は公開されているのでそれを用いてだれでも署名文の正真性を検証できる.",
      "answer": "o"
    },
    "180": {
      "question": "デジタル署名においてメッセージそのものではなくその暗号文を署名することで正真性を保持しつつ全体のデータ量を小さくできる.",
      "answer": "x"
    },
    "181": {
      "question": "デジタル署名においてメッセージそのものではなくそのハッシュを署名することで正真性 を保持しつつ全体のデータ量を小さくできる.",
      "answer": "o"
    },
    "182": {
      "question": "機密性と正真性の両方を満たしたいときは署名文とともにメッセージを署名者の公開鍵で 暗号化して送ればよい.こうすれば第三者の証明が可能である.",
      "answer": "x"
    },
    "183": {
      "question": "機密性と正真性の両方を満たしたいときは署名文とともにメッセージを検証者の公開鍵で 暗号化して送ればよい.このときメッセージを知るのは検証者のみである.",
      "answer": "o"
    },
    "184": {
      "question": "デジタル署名を用いると通信路中の書き換えを防止できる.",
      "answer": "x"
    },
    "185": {
      "question": "デジタル署名を用いると通信路中の書き換えを検出できる.",
      "answer": "o"
    },
    "186": {
      "question": "デジタル署名を現実世界の署名や捺印の代わりとして有効とする法案が現在国会で審議されている.",
      "answer": "x"
    },
    "187": {
      "question": "法律が施行されており適切な方法で署名すればそのデジタル署名は現実世界の署名や捺印 の代わりとして有効である.",
      "answer": "o"
    },
    "188": {
      "question": "デジタル署名は正真性を実現するための技術でありman-in-the-middle 攻撃は検討しなくてもよい.",
      "answer": "x"
    },
    "189": {
      "question": "デジタル署名に対してman-in-the-middle 攻撃が成立してしまうことがある.",
      "answer": "o"
    },
    "190": {
      "question": "乱数は一方向ハッシュ関数や HMAC などで使用される.",
      "answer": "x"
    },
    "191": {
      "question": "乱数は鍵やノンスの生成などに使用される.",
      "answer": "o"
    },
    "192": {
      "question": "暗号技術では無作為性(randomness)を持つ乱数を使用すべきである.線形合同法がその例である.",
      "answer": "x"
    },
    "193": {
      "question": "暗号技術では少なくとも予測不可能性を持つ乱数を使用すべきである.一方向ハッシュ関数 とカウンタを用いた方法が知られている.",
      "answer": "o"
    },
    "194": {
      "question": "疑似乱数の種として利用日時に関する情報(例えば 20040625 や 124727 といった数値)を用いるとよい.",
      "answer": "x"
    },
    "195": {
      "question": "疑似乱数の種は暗号の鍵に匹敵する重要性を持ち秘密に保持しなければならない.",
      "answer": "o"
    },
    "196": {
      "question": "可変長メッセージの暗号化に関して対称暗号の DES や AES は不向きでありRSA などの公開 鍵暗号を用いればよい.",
      "answer": "x"
    },
    "197": {
      "question": "パディングやブロック分割により可変長メッセージを DESAESRSA などで適切に暗号化できる.",
      "answer": "o"
    },
    "198": {
      "question": "対称暗号アルゴリズムはみなブロック暗号である.",
      "answer": "x"
    },
    "199": {
      "question": "使い捨てパッドはストリーム暗号にDESトリプル DESRSA などはブロック暗号に分類される.",
      "answer": "o"
    },
    "200": {
      "question": "ECB モードは並列処理が可能なことや通信における 1 ブロックの破損や改竄が他のブロック に影響しないことなどのメリットから利用が推奨されている.",
      "answer": "x"
    },
    "201": {
      "question": "ECB モードはブロック単位の改竄が可能なため利用は推奨されていない.",
      "answer": "o"
    },
    "202": {
      "question": "CBC モードを用いた復号では暗号文ブロックと1 つ前の平文ブロックとの XOR をとったも のを復号する.",
      "answer": "x"
    },
    "203": {
      "question": "CBC モードを用いた暗号化では平文ブロックと1 つ前の暗号文ブロックとの XOR をとった ものを暗号化する.",
      "answer": "o"
    },
    "204": {
      "question": "CTR モードについては通信路でのビット反転があったとき復号するとそのブロック全体に 影響を及ぼす.",
      "answer": "x"
    },
    "205": {
      "question": "CTR モードについては通信路でのビット反転があったとき復号するとその位置のビットが 反転する.",
      "answer": "o"
    },
    "206": {
      "question": "機密性と低コスト(通信量を減らすこと)を考えるなら暗号化してから圧縮するとよい.",
      "answer": "x"
    },
    "207": {
      "question": "機密性と低コスト(通信量を減らすこと)を考えるなら圧縮してから暗号化するとよい.",
      "answer": "o"
    },
    "208": {
      "question": "ソルトを用いることで秘密通信における鍵空間を大きくすることができる.",
      "answer": "x"
    },
    "209": {
      "question": "ソルトを用いることで暗号化されたパスワードファイルの漏洩があっても別々のユーザが 同一のパスワードを使用していることが知られる可能性を減らすことができる.",
      "answer": "o"
    },
    "210": {
      "question": "PKI における証明書は何らかの CA の公開鍵により暗号化されている.",
      "answer": "x"
    },
    "211": {
      "question": "PKI における証明書には何らかの CA によるデジタル署名がついている.",
      "answer": "o"
    },
    "212": {
      "question": "証明書の有効性を確認するのはもっぱら CA の役割である.",
      "answer": "x"
    },
    "213": {
      "question": "証明書の有効性を確認するのは基本的に証明書にある公開鍵を利用しようとするユーザ役割 である.",
      "answer": "o"
    },
    "214": {
      "question": "証明書を破棄するにはリポジトリからその証明書を削除すればよい.",
      "answer": "x"
    },
    "215": {
      "question": "証明書を破棄するにはCRL にその証明書の情報を登録しなければならない.",
      "answer": "o"
    },
    "216": {
      "question": "証明書はより上位の CA による署名がつくこともありその場合あるユーザの公開鍵に何階 層にも渡ってデジタル署名がなされることがある.",
      "answer": "x"
    },
    "217": {
      "question": "CA が階層化されていることもありその場合ルート CA はセルフ署名により証明書を発行す る.",
      "answer": "o"
    },
    "218": {
      "question": "セキュリティポリシーとは企業の知的財産を守るためのルールを記載したものであり広く 普及している.",
      "answer": "x"
    },
    "219": {
      "question": "セキュリティポリシーとは組織の情報資産を守るための方針や基準を明記したものであり 組織ごとに定める.",
      "answer": "o"
    },
    "220": {
      "question": "セキュリティポリシーは組織内の情報システムに詳しい者が作成 し最終的に組織の長が承認することで効力を発する.",
      "answer": "x"
    },
    "221": {
      "question": "セキュリティポリシーを策定する際には組織内のシステム管理者・ネットワーク管理者だけ でなく情報システム部門の責任者や法務・監査・人材育成といった部門の責任者も携わるべきである.",
      "answer": "o"
    },
    "222": {
      "question": "ISO 9000 や ISO 14000 と同クラスの情報セキュリティマネジメントに対する国際・国内規格 は存在しない.",
      "answer": "x"
    },
    "223": {
      "question": "IT 関連製品個人情報保護措置情報セキュリティマネジメントに関する国内の規格が存在する.",
      "answer": "o"
    },
    "224": {
      "question": "ISMS を 1 式購入し導入すれば情報セキュリティの水準が飛躍的に向上する.",
      "answer": "x"
    },
    "225": {
      "question": "ISMS は情報マネジメント体制を維持管理するための仕組みでありその認証制度も存在する.",
      "answer": "o"
    },
    "226": {
      "question": "コンピュータ犯罪に関する刑法の条文では具体的な被害を与えていなくても処罰の対象になり得る.",
      "answer": "x"
    },
    "227": {
      "question": "不正アクセス防止法では具体的な被害を与えていなくても処罰の対象になり得る.",
      "answer": "o"
    },
    "228": {
      "question": "バイオメトリクス認証では個人の DNA 情報が埋め込まれた ID カードを用いてユーザ認証を行う.",
      "answer": "x"
    },
    "229": {
      "question": "バイオメトリクス認証とは指紋や光彩など個人に固有の情報を用いたユーザ認証方式のことである.",
      "answer": "o"
    },
    "230": {
      "question": "パスワードを暗号化して送ればリプレイ攻撃を防ぐことができる.",
      "answer": "x"
    },
    "231": {
      "question": "ワンタイムパスワードを用いればリプレイ攻撃を防ぐことができる.",
      "answer": "o"
    }
  }
}